x = c(1,3,2,5)
x
x = (1,6,2)
x = (1,6,2)
x = c(1,6,2)
x
y = c(1,4,3)
?funcname
length(x)
length(y)
x+y
ls()
rm(x,y)
ls()
rm(list = ls())
ls()
x = matrix(data = C(1,2,3,4), nrow = 2, ncol = 2)
x = matrix(data = c(1,2,3,4), nrow = 2, ncol = 2)
x
rm(x)
x
x=matrix(c(1,2,3,4),2,2)
x
?matrix
matrix(c(1,2,3,4),2,2,byrow = TRUE)
sqrt(x)
x^2
x=rnorm(50)
x
y=x+rnorm(50,mean = 50,sd=.1)
y
cor(x,y)
set.seed(1303)
rnorm(50)
rnorm(50)
set.seed(3)
y=rnorm(100)
mean(y)
var(y)
sqrt(var(y))
sd(y)
x=rnorm(100)
y=rnorm(100)
plot(x,y)
plot(x,y,xlab = "this is the x-axis",ylab = "this is the y-axis",main = "Plot of X vs Y")
pdf("Figure.pdf")
plot(x,y,col="green")
plot(x,y,col="green")
dev.off()
x=seq(1,10)
x
x=1:10
x
x=seq(-pi,pi,length=50)
A=matrix(1:16,4,4)
A
A[2,3]
A[c(1,3),c(2,4)]
A[1:3,2:4]
A[1:2,]
A[,1:2]
A[1,]
A[-c(1,3),]
A[-c(1,3),-c(1,3,4)]
dim(A)
Auto=read.table("Auto.data")
install.packages(ISLR)
install(ISLR)
fix(Auto)
q()
library(UCM)
install.packages("ISLR")
names(Auto)
library("Auto")
names("Auto")
library(Auto)
library(MASS)
names(MASS)
names("MASS")
names(Boston)
install.packages("Auto")
library(Boston)
library(MASS)
summary(Boston)
names(Boston)
names(Auto)
library(ISLR)
names(Auto)
?pairs
names(Auto)
pairs(Auto)
library(ISLR)
summary(Auto)
names(Auto)
pairs(Auto)
?lm()
cor(Auto)
cor("Auto"-"name")
?cor()
cor(Auto[,-9])
lm.fit()
?lm.fit
lm.fit=lm(mpg~cylinders+displacement+horsepower+weight+acceleration+year+origin, data = Auto)
summary(lm.fit)
plot(lm.fit)
?par
par(mfrow=c(2,2))
plot(lm.fit)
lm.fit=lm(mpg~cylinders*displacement+horsepower+weight+acceleration+year+origin, data = Auto)
summary(lm.fit)
summary(lm.fit)
lm.fit=lm(mpg~cylinders*displacement+horsepower+weight+acceleration+year+origin, data = Auto)
summary(lm.fit)
lm.fit=lm(mpg~cylinders+displacement*horsepower+weight+acceleration+year+origin, data = Auto)
summary(lm.fit)
lm.fit=lm(mpg~cylinders+displacement+horsepower*weight+acceleration+year+origin, data = Auto)
summary(lm.fit)
lm.fit=lm(mpg~cylinders+displacement+horsepower+weight*acceleration+year+origin, data = Auto)
summary(lm.fit)
lm.fit=lm(mpg~cylinders+displacement+horsepower+weight+acceleration*year+origin, data = Auto)
summary(lm.fit)
lm.fit=lm(mpg~cylinders+displacement+horsepower+weight+acceleration+year*origin, data = Auto)
summary(lm.fit)
lm.fit=lm(mpg~cylinders+displacement+horsepower*acceleration+weight+year*origin, data = Auto)
summary(lm.fit)
lm.fit=lm(mpg~cylinders*displacement*horsepower*acceleration+weight+year+origin, data = Auto)
summary(lm.fit)
lm.fit=lm(mpg~cylinders*displacement*horsepower*acceleration*weight*year*origin, data = Auto)
summary(lm.fit)
lm.fit=lm(mpg~cylinders*displacement*horsepower*acceleration*weight+year+origin, data = Auto)
summary(lm.fit)
lm.fit=lm(mpg~cylinders+I(cylinder^2)+displacement+horsepower+weight+acceleration+year+origin, data = Auto)
lm.fit=lm(mpg~cylinders+I(cylinders^2)+displacement+horsepower+weight+acceleration+year+origin, data = Auto)
summary(lm.fit)
lm.fit=lm(mpg~cylinders+I(cylinders^2)+I(cylinders^0.5)+displacement+horsepower+weight+acceleration+year+origin, data = Auto)
lm.fit=lm(mpg~cylinders+I(cylinders^2)+I(cylinders^0.5)+I(log(cylinders))+displacement+horsepower+weight+acceleration+year+origin, data = Auto)
summary(lm.fit)
summary(lm.fit)
lm.fit=lm(mpg~cylinders+I(cylinders^2)+I(cylinders^0.5)+I(log(cylinders))+displacement+I(displacement^2)+I(displacement^0.5)+I(log(displacement))+horsepower+I(horsepower^2)+I(horsepower^0.5)+I(log(horsepower))+weight+I(weight^2)+I(weight^0.5)+I(log(weight))+acceleration+I(acceleration^2)+I(acceleration^0.5)+I(log(acceleration))+year+I(year^2)+I(year^0.5)+I(log(year))+origin+I(origin^2)+I(origin^0.5)+I(log(origin)), data = Auto)
summary(lm.fit)
lm.fit=lm(mpg~cylinders+I(cylinders^2)+I(cylinders^0.5)+I(log(cylinders))+displacement+I(displacement^2)+I(displacement^0.5)+I(log(displacement))+horsepower+I(horsepower^2)+I(horsepower^0.5)+I(log(horsepower))+weight+I(weight^2)+I(weight^0.5)+I(log(weight))+acceleration+I(acceleration^2)+I(acceleration^0.5)+I(log(acceleration))+year+I(year^2)+I(year^0.5)+I(log(year))+origin+I(origin^2)+I(origin^0.5)+I(log(origin)), data = Auto)
summary(lm.fit)
library(MASS)
library(ISLR)
x=c(1,3,5,2)
x
x=c(1,6,2)
x
length(x)
y=c(1,4,3)
y
length(y)
x+y
ls
ls()
rm(x,y)
ls()
rm(list = ls())
?matrix
x=matrix(data = c(1,2,3,4))
x
x=matrix(data = c(1,2,3,4),nrow = 2)
x
x=matrix(data = c(1,2,3,4),nrow = 2, ncol = 2)
x
rm(x)
x=matrix(c(1,2,3,4),2,2)
x
matrix(c(1,2,3,4),2,2, byrow = TRUE)
x
sqrt(x)
x^2
x=rnorm(50)
x
x
y=x+rnorm(50, mean=50, sd=.1)
y
cor(x,y)
set.seed(1303)
rnorm()
rnorm(50)
set.seed(3)
y=rnorm(100)
mean(y)
var(y)
sqrt(var(y))
sd(y)
plot(x,y)
x=rnorm(100)
y=rnorm(100)
plot(x,y)
plot(x,y,xlab = "this is the x-axis", ylab = "this is the y-axis", main = "Plot of X vs Y")
pdf("Hi.pdf")
plot(x,y, col="green")
plot(x,y,xlab = "this is the x-axis", ylab = "this is the y-axis", main = "Plot of X vs Y", col="green")
dev.off()
seq(1,10)
seq(0,1,length=10)
x=seq(3,11)
x
x=1:10
x
x=seq(-pi,pi,length=50)
x
A=matrix(1:10,4,4)
A=matrix(1:16,4,4)
a
A
A[2,3]
A[c(1,3),c(2,4)]
A[1:3,2:4]
A[,1:2]
A[-c(1,3),]
dim(A)
Auto=read.table("Auto.data")
import("ISLR")
library("ISLR")
Auto=read.table("Auto.data")
library()
library(MASS)
library(ISLR)
fix(Auto)
Auto=read.table("Auto.data")
fix(Auto)
names(Auto)
names(library("ISLR"))
names(library("MASS"))
read.table(Auto)
read.table("Auto")
read.table("Auto.csv")
dim(Auto)
na.omit(Auto)
dim(Auto)
names(Auto)
plot(cylinders, mpg)
plot(Auto$cylinders, Auto$mpg)
plot(Auto$cylinders, Auto$mpg)
attach(Auto)
plot(cylinders, mpg)
plot(x,y)
plot(mpg, cylinders)
cylinders=as.factor(cylinders)
plot(cylinders, mpg)
plot(cylinders, mpg)
x=y
plot(x,y)
plot(horsepower, mpg)
identify(horsepower,mpg,name)
summary(Auto)
summary(mpg)
q()
